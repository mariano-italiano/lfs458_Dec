mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
ls -la $HOME/.kube/config
kubectl get nodes
kubectl get pods -A
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
cilium install
watch -n1 kubectl get pods -A
kubectl get nodes
watch -n1 kubectl get pods -A
kubectl get pods -A -o wide
sudo kubeadm token create --print-join-command
git clone https://github.com/mariano-italiano/lfs458_Dec.git
sudo apt install git -y
git config --global core.hookspath 'hooks' && git config --global credential.helper store
git clone https://github.com/mariano-italiano/lfs458_Dec.git
cd lfs458_Dec/]
cd lfs458_Dec/
ls -la
vi deploy-k8s.sh
sudo apt-get install bash-completion >/dev/null 2>&1
vi ~/.bashrc
\
git status
vi deploy-k8s-rhel.sh 
git add .
git status
git commit -m "adding installation scripts"
git config --global user.email "markuj5@gmail.com"
git commit -m "adding installation scripts"
git push
kubectl get nodes
watch -n1 kubectl get pods -A
watch -n1 kubectl get pods -A -o wide
kubectl get nodes
kubectl describe nodes k8s-master 
kubectl get nodes
sudo crictl ps 
sudo crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock
sudo crictl ps 
sudo crictl inspect 2f24edaecbfea
sudo crictl logs 2f24edaecbfea
kubectl edit deployments.apps -n kube-system cilium-operator 
kubectl get namespaces
kubectl  get pods
kubectl  get pods -n default 
kubectl get cm
kubectl get cm --all-namespaces 
kubectl get cm -A
kubectl get pod -A
kubectl get deploy -A
kubectl get ns
kubectl create namespace marcin-ns 
kubectl edit namespaces marcin-ns 
kubectl describe ns marcin-ns 
kubectl get  ns marcin-ns
kubectl describe pod -n kube-system kube-apiserver-k8s-master 
kubectl delet ns ma
kubectl delete ns marcin-ns 
kubectl get --namespace kube-system cm
kubectl -n kube-system  get cm
kubectl get cm -n kube-system 
sudo vi /etc/kubernetes/manifests/etcd.yaml 
kubectl get nodes
sudo -i
sudo vi /etc/kubernetes/manifests/etcd.yaml 
kubectl -n kube-system exec -it etcd-k8s-master -- sh
kubectl -n kube-system exec -it etcd-k8s-master -- sh \ 
kubectl -n kube-system exec -it etcd-k8s-master -- sh -c "ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key endpoint health"
kubectl -n kube-system exec -it etcd-k8s-master -- sh -c "ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --endpoints=https://127.0.0.1:2379 member list"
kubectl -n kube-system exec -it etcd-k8s-master -- sh -c "ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --endpoints=https://127.0.0.1:2379 member list -w table"
kubectl -n kube-system exec -it etcd-k8s-master -- sh -c "ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot save /tmp/etcd-backup.db"
ls -la /tmp/
kubectl -n kube-system exec -it etcd-k8s-master -- sh
kubectl -n kube-system cp etcd-k8s-master:/tmp/etcd-backup.db /tmp/
ls -la
etcdctl
sudo apt  install etcd-client -y
sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot save /tmp/etcd-backup.db"
sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot save /tmp/etcd-backup.db
ls -la /tmp\
ls -la /tmp
ls -lah /tmp
rm /tmp/etcd-backup.db 
sudo rm /tmp/etcd-backup.db 
kubectl get pods
kubectl run test-etcd --image nginx
kubectl  get pods
sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot save /tmp/etcd-backup.db
kubectl delete pod test-etcd 
kubectl  get pods
sudo ls -al /var/lib/etcd
sudo ls -al /var/lib/etcd/member
sudo rm -rf /var/lib/etcd
kubectl get nodes
kubectl get pods
kubectl get nodes
sudo crictl ps -a
sudo watch -n1 crictl ps -a
sudo ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --data-dir=/var/lib/etcd-restored --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key snapshot restore /tmp/etcd-backup.db
sudo watch -n1 crictl ps -a
sudo watch -n1 crictl ps -a | grep -e etcd -e apiser
sudo watch -n1 crictl ps -a 
sudo ls -la /var/lib
sudo ls -la /var/lib/etcd
sudo ls -la /var/lib/etcd-restored/
sudo watch -n1 crictl ps -a 
kubectl get nodes
kubectl get pods
sudo watch -n1 crictl ps -a 
sudo vi /etc/kubernetes/manifests/etcd.yaml 
sudo watch -n1 crictl ps -a 
kubectl get pods
vi /etc/kubernetes/manifests/etcd.yaml 
sudo vi /etc/kubernetes/manifests/etcd.yaml 
sudo watch -n1 crictl ps -a 
kubectl get nodes
kubectl get pods
sudo watch -n1 crictl ps -a 
sudo vi /etc/kubernetes/manifests/etcd.yaml 
history
history| awk '$1 > 4' | cut -c 8- > day1-history.txt
